com.crossoverjie.algorithm.TwoStackQueueTest	public void queue() 	twoStackQueue	B1	0/13
com.crossoverjie.algorithm.LinkedListMergeSort	public com.crossoverjie.algorithm.LinkedListMergeSort.Node mergeSort(com.crossoverjie.algorithm.LinkedListMergeSort.Node, int) 	rightStart	B3	0/13
com.crossoverjie.algorithm.LinkedListMergeSort	public com.crossoverjie.algorithm.LinkedListMergeSort.Node mergeSort(com.crossoverjie.algorithm.LinkedListMergeSort.Node, int) 	rightStart	B4	0/11
com.crossoverjie.algorithm.LinkedListMergeSort	public com.crossoverjie.algorithm.LinkedListMergeSort.Node mergeSort(com.crossoverjie.algorithm.LinkedListMergeSort.Node, int) 	rightStart	B8	0/6
com.crossoverjie.algorithm.TwoStackQueueTest	public void queue() 	size	B1	0/13
com.crossoverjie.algorithm.TwoStackQueueTest	public void queue() 	size	B2	0/6
com.crossoverjie.algorithm.TwoStackQueueTest	public void queue() 	size	B4	0/4
com.crossoverjie.algorithm.ArrayKShift	public void arrayKShift(int[], int) 	array	B5	0/12
com.crossoverjie.algorithm.BinaryNodeTravel	public com.crossoverjie.algorithm.BinaryNodeTravel levelIterator(com.crossoverjie.algorithm.BinaryNodeTravel) 	pre	B2	0/10
com.crossoverjie.kafka.KafkaTest	public void consumer() 	props	B1	0/7
com.crossoverjie.kafka.KafkaTest	public void threadConsumer() throws java.lang.InterruptedException	props	B1	0/7
com.crossoverjie.algorithm.LinkedListMergeSort	public com.crossoverjie.algorithm.LinkedListMergeSort.Node mergeSort(com.crossoverjie.algorithm.LinkedListMergeSort.Node, int) 	middle	B3	0/7
com.crossoverjie.algorithm.LinkedListMergeSort	public com.crossoverjie.algorithm.LinkedListMergeSort.Node mergeSort(com.crossoverjie.algorithm.LinkedListMergeSort.Node, int) 	middle	B4	0/5
com.crossoverjie.algorithm.BinaryNode	public com.crossoverjie.algorithm.BinaryNode createNode() 	left2	B1	0/5
com.crossoverjie.algorithm.BinaryNode	public void levelIterator(com.crossoverjie.algorithm.BinaryNode) 	current	B3	0/5
com.crossoverjie.algorithm.BinaryNodeTravel	public com.crossoverjie.algorithm.BinaryNodeTravel createNode() 	nodeC	B1	0/5
com.crossoverjie.algorithm.BinaryNodeTravel	public com.crossoverjie.algorithm.BinaryNodeTravel levelIterator(com.crossoverjie.algorithm.BinaryNodeTravel) 	current	B3	0/5
com.crossoverjie.algorithm.MergeTwoSortedListsTest	public void mergeTwoLists() throws java.lang.Exception	l2_2	B1	0/5
com.crossoverjie.algorithm.MergeTwoSortedListsTest	public void mergeTwoLists() throws java.lang.Exception	node5	B1	0/5
com.crossoverjie.algorithm.MergeTwoSortedListsTest	public void mergeTwoLists2() throws java.lang.Exception	l2_2	B1	0/5
com.crossoverjie.algorithm.MergeTwoSortedListsTest	public void mergeTwoLists3() throws java.lang.Exception	l2_2	B1	0/5
com.crossoverjie.algorithm.MergeTwoSortedListsTest	public void mergeTwoLists3() throws java.lang.Exception	node2	B1	0/5
com.crossoverjie.algorithm.ReverseNode	public void reverseNode(Node#RAW) 	pre	B4	0/5
com.crossoverjie.oom.heap.MetaSpaceOOM	public static void main(java.lang.String[]) 	enhancer	B2	0/5
com.crossoverjie.actual.ThreadCommunication	private static void cyclicBarrier() throws java.lang.Exception	cyclicBarrier	B1	0/4
com.crossoverjie.actual.ThreadCommunication	private static void cyclicBarrier() throws java.lang.Exception	e	B1	0/4
com.crossoverjie.actual.ThreadCommunication	private static void cyclicBarrier() throws java.lang.Exception	e	B1	0/4
com.crossoverjie.actual.ThreadCommunication	private static void cyclicBarrier() throws java.lang.Exception	e	B1	0/4
com.crossoverjie.actual.ThreadCommunication	private static void executorService() throws java.lang.Exception	poolExecutor	B1	0/4
com.crossoverjie.algorithm.ReverseNodeTest	public void recNodeTest31() 	node1	B1	0/4
com.crossoverjie.algorithm.ReverseNodeTest	public void reverseNode1() throws java.lang.Exception	node1	B1	0/4
com.crossoverjie.algorithm.HappyNum	public boolean isHappy(int) 	sum	B3	0/4
com.crossoverjie.algorithm.HappyNum	public boolean isHappy(int) 	sum	B4	0/3
com.crossoverjie.actual.ReadFile	private static void sortAndFindKeyWords(java.io.File) throws java.io.IOException	sort	B9	0/3
com.crossoverjie.algorithm.BinaryNode	public com.crossoverjie.algorithm.BinaryNode createNode() 	left3	B1	0/3
com.crossoverjie.algorithm.BinaryNodeTravel	public com.crossoverjie.algorithm.BinaryNodeTravel createNode() 	nodeB	B1	0/3
com.crossoverjie.algorithm.LinkLoopTest	public void isLoop() throws java.lang.Exception	node2	B1	0/3
com.crossoverjie.algorithm.MergeTwoSortedListsTest	public void mergeTwoLists() throws java.lang.Exception	l1_2	B1	0/3
com.crossoverjie.algorithm.MergeTwoSortedListsTest	public void mergeTwoLists() throws java.lang.Exception	l2_3	B1	0/3
com.crossoverjie.algorithm.MergeTwoSortedListsTest	public void mergeTwoLists() throws java.lang.Exception	node6	B1	0/3
com.crossoverjie.algorithm.MergeTwoSortedListsTest	public void mergeTwoLists2() throws java.lang.Exception	l2_3	B1	0/3
com.crossoverjie.algorithm.MergeTwoSortedListsTest	public void mergeTwoLists3() throws java.lang.Exception	l2_3	B1	0/3
com.crossoverjie.algorithm.MergeTwoSortedListsTest	public void mergeTwoLists3() throws java.lang.Exception	node3	B1	0/3
com.crossoverjie.algorithm.ReverseNodeTest	public void recNodeTest31() 	node2	B1	0/3
com.crossoverjie.algorithm.ReverseNodeTest	public void reverseHead21() throws java.lang.Exception	node2	B1	0/3
com.crossoverjie.algorithm.ReverseNodeTest	public void reverseNode1() throws java.lang.Exception	node2	B1	0/3
com.crossoverjie.concurrent.StopThread	public static void main(java.lang.String[]) throws java.lang.InterruptedException	thread	B1	0/3
com.crossoverjie.design.pattern.factorymethod.Main	public static void main(java.lang.String[]) 	animal	B1	0/3
com.crossoverjie.actual.LRUAbstractMap	private void executeCheckTime() 	checkTimePool	B1	0/2
com.crossoverjie.actual.LRUMap	private void addHead(Node<K,V>) 	node	B1	0/2
com.crossoverjie.algorithm.ReverseNode	public void reverseNode(Node#RAW) 	next	B5	0/2
com.crossoverjie.disruptor.LongEventMain	public static void main(java.lang.String[]) throws java.lang.Exception	productExecutor	B4	0/2
com.crossoverjie.guava.CacheLoaderTest	private void init() throws java.lang.InterruptedException	QUEUE	B2	0/2
com.crossoverjie.red.RedPacket	public static void main(java.lang.String[]) 	sum	B1	2/5
com.crossoverjie.red.RedPacket	public static void main(java.lang.String[]) 	sum	B2	0/2
com.crossoverjie.red.RedPacketTest	public void right() 	sum	B1	2/5
com.crossoverjie.red.RedPacketTest	public void right() 	sum	B2	0/2
com.crossoverjie.red.RedPacketTest	public void right_() 	sum	B1	2/5
com.crossoverjie.red.RedPacketTest	public void right_() 	sum	B2	0/2
com.crossoverjie.red.RedPacketTest	public void right__() 	sum	B1	2/5
com.crossoverjie.red.RedPacketTest	public void right__() 	sum	B2	0/2
com.crossoverjie.algorithm.BloomFilters	public static void main(java.lang.String[]) 	bloomFilter	B1	1/4
com.crossoverjie.actual.LRULinkedMapTest	public void get() throws java.lang.Exception	map	B1	2/8
com.crossoverjie.actual.LRULinkedMapTest	public void put2() throws java.lang.Exception	map	B1	2/8
com.crossoverjie.actual.LRULinkedMapTest	public void put() throws java.lang.Exception	map	B1	2/7
com.crossoverjie.basic.StringTest	public static void main(java.lang.String[]) throws java.lang.NoSuchFieldException, java.lang.IllegalAccessException	values	B1	2/6
com.crossoverjie.algorithm.ReverseNode	public void reverseNode1(Node#RAW) 	stack	B1	2/6
com.crossoverjie.algorithm.ReverseNode	public void reverseNode1(Node#RAW) 	stack	B2	2/5
com.crossoverjie.algorithm.LinkedListMergeSort	public com.crossoverjie.algorithm.LinkedListMergeSort.Node mergeList(com.crossoverjie.algorithm.LinkedListMergeSort.Node, com.crossoverjie.algorithm.LinkedListMergeSort.Node) 	tmp	B3	3/6
com.crossoverjie.algorithm.LinkedListMergeSort	public com.crossoverjie.algorithm.LinkedListMergeSort.Node mergeList(com.crossoverjie.algorithm.LinkedListMergeSort.Node, com.crossoverjie.algorithm.LinkedListMergeSort.Node) 	tmp	B5	2/4
com.crossoverjie.algorithm.LinkedListMergeSort	public com.crossoverjie.algorithm.LinkedListMergeSort.Node mergeList(com.crossoverjie.algorithm.LinkedListMergeSort.Node, com.crossoverjie.algorithm.LinkedListMergeSort.Node) 	tmp	B7	1/3
com.crossoverjie.actual.TwoThreadWaitNotifySimple.JiNum	public void run() 	number	B3	1/2
com.crossoverjie.actual.TwoThreadWaitNotifySimple.OuNum	public void run() 	number	B3	1/2
com.crossoverjie.guava.callback.Main	public static void main(java.lang.String[]) 	caller	B1	3/5
com.crossoverjie.algorithm.BloomFiltersTest	public void bloomFilterTest() 	bloomFilters	B1	2/3
com.crossoverjie.algorithm.LinkLoopTest	public void isLoop3() throws java.lang.Exception	node1	B1	2/3
com.crossoverjie.concurrent.ArrayQueueTest	public void put5() throws java.lang.InterruptedException	queue	B1	2/3
com.crossoverjie.actual.LRUAbstractMap	public sealed java.lang.Object put(java.lang.Object, java.lang.Object) 	currentNode	B1	11/15
com.crossoverjie.concurrent.ArrayQueueTest	public void get2() throws java.lang.InterruptedException	queue	B1	3/4
com.crossoverjie.actual.LRUMapTest	public void get() throws java.lang.Exception	lruMap	B1	4/5
com.crossoverjie.actual.LRUMapTest	public void get2() throws java.lang.Exception	lruMap	B1	4/5
com.crossoverjie.actual.LRUMapTest	public void get3() throws java.lang.Exception	lruMap	B1	4/5
com.crossoverjie.actual.LRUMapTest	public void put4() throws java.lang.Exception	lruMap	B1	4/5
com.crossoverjie.actual.ThreadCommunication	public static void piped() throws java.io.IOException	reader	B1	4/5
com.crossoverjie.concurrent.ArrayQueueTest	public void put4() throws java.lang.InterruptedException	queue	B1	4/5
com.crossoverjie.actual.LRUMapTest	public void put() throws java.lang.Exception	lruMap	B1	5/6
com.crossoverjie.actual.LRUMapTest	public void put2() throws java.lang.Exception	lruMap	B1	5/6
com.crossoverjie.actual.LRUMapTest	public void put3() throws java.lang.Exception	lruMap	B1	6/7
com.crossoverjie.actual.LRUMapTest	public void get4() throws java.lang.Exception	lru	B1	10/11
